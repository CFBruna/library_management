# Generated by Django 5.2.4 on 2025-07-13 02:02

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('patrons', '0001_initial'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='patron',
            options={
                'verbose_name': 'Leitor',
                'verbose_name_plural': 'Leitores',
            },
        ),
        migrations.AlterField(
            model_name='patron',
            name='address',
            field=models.TextField(
                blank=True, null=True, verbose_name='Endereço'
            ),
        ),
        migrations.AlterField(
            model_name='patron',
            name='cpf',
            field=models.CharField(
                max_length=11,
                unique=True,
                validators=[
                    django.core.validators.RegexValidator(
                        message='CPF deve ter 11 dígitos numéricos.',
                        regex='^\\d{11}$',
                    )
                ],
                verbose_name='CPF',
            ),
        ),
        migrations.AlterField(
            model_name='patron',
            name='description',
            field=models.TextField(
                blank=True, null=True, verbose_name='Descrição'
            ),
        ),
        migrations.AlterField(
            model_name='patron',
            name='email',
            field=models.EmailField(
                max_length=254, unique=True, verbose_name='Email'
            ),
        ),
        migrations.AlterField(
            model_name='patron',
            name='name',
            field=models.CharField(max_length=250, verbose_name='Nome'),
        ),
        migrations.AlterField(
            model_name='patron',
            name='phone_number',
            field=models.CharField(
                max_length=13,
                validators=[
                    django.core.validators.RegexValidator(
                        message='Número inválido. Formato esperado: +5511999998888 ou 11999999999.',
                        regex='^(\\+55)?\\d{10,11}$',
                    )
                ],
                verbose_name='Telefone',
            ),
        ),
    ]
